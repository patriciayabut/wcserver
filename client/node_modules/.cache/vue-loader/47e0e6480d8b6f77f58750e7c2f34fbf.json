{"remainingRequest":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\pampy\\Desktop\\webapp_project\\client\\src\\components\\Footer.vue?vue&type=template&id=40ab164b&","dependencies":[{"path":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\src\\components\\Footer.vue","mtime":1584468947641},{"path":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\pampy\\Desktop\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZm9vdGVyIiwgeyBzdGF0aWNDbGFzczogInNpdGUtZm9vdGVyIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLXNtLTEyIGNvbC1tZC02IiB9LCBbCiAgICAgICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIkFib3V0IildKSwKICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAidGV4dC1qdXN0aWZ5IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJTY2FuZmNvZGUuY29tICIpLAogICAgICAgICAgICAgIF9jKCJpIiwgW192bS5fdigiQ09ERSBXQU5UUyBUTyBCRSBTSU1QTEUgIildKSwKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiIGlzIGFuIGluaXRpYXRpdmUgdG8gaGVscCB0aGUgdXBjb21pbmcgcHJvZ3JhbW1lcnMgd2l0aCB0aGUgY29kZS4gU2NhbmZjb2RlIGZvY3VzZXMgb24gcHJvdmlkaW5nIHRoZSBtb3N0IGVmZmljaWVudCBjb2RlIG9yIHNuaXBwZXRzIGFzIHRoZSBjb2RlIHdhbnRzIHRvIGJlIHNpbXBsZS4gV2Ugd2lsbCBoZWxwIHByb2dyYW1tZXJzIGJ1aWxkIHVwIGNvbmNlcHRzIGluIGRpZmZlcmVudCBwcm9ncmFtbWluZyBsYW5ndWFnZXMgdGhhdCBpbmNsdWRlIEMsIEMrKywgSmF2YSwgSFRNTCwgQ1NTLCBCb290c3RyYXAsIEphdmFTY3JpcHQsIFBIUCwgQW5kcm9pZCwgU1FMIGFuZCBBbGdvcml0aG0uIgogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wteHMtNiBjb2wtbWQtMyIgfSwgWwogICAgICAgICAgICBfYygiaDYiLCBbX3ZtLl92KCJDYXRlZ29yaWVzIildKSwKICAgICAgICAgICAgX2MoInVsIiwgeyBzdGF0aWNDbGFzczogImZvb3Rlci1saW5rcyIgfSwgWwogICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiaHR0cDovL3NjYW5mY29kZS5jb20vY2F0ZWdvcnkvYy1sYW5ndWFnZS8iIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiQyIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgICAgICAgImh0dHA6Ly9zY2FuZmNvZGUuY29tL2NhdGVnb3J5L2Zyb250LWVuZC1kZXZlbG9wbWVudC8iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCJVSSBEZXNpZ24iKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAgICJodHRwOi8vc2NhbmZjb2RlLmNvbS9jYXRlZ29yeS9iYWNrLWVuZC1kZXZlbG9wbWVudC8iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCJQSFAiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGhyZWY6CiAgICAgICAgICAgICAgICAgICAgICAgICJodHRwOi8vc2NhbmZjb2RlLmNvbS9jYXRlZ29yeS9qYXZhLXByb2dyYW1taW5nLWxhbmd1YWdlLyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkphdmEiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2NhbmZjb2RlLmNvbS9jYXRlZ29yeS9hbmRyb2lkLyIgfSB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCJBbmRyb2lkIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2NhbmZjb2RlLmNvbS9jYXRlZ29yeS90ZW1wbGF0ZXMvIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIlRlbXBsYXRlcyIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLXhzLTYgY29sLW1kLTMiIH0sIFsKICAgICAgICAgICAgX2MoImg2IiwgW192bS5fdigiUXVpY2sgTGlua3MiKV0pLAogICAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAiZm9vdGVyLWxpbmtzIiB9LCBbCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2NhbmZjb2RlLmNvbS9hYm91dC8iIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkFib3V0IFVzIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2NhbmZjb2RlLmNvbS9jb250YWN0LyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiQ29udGFjdCBVcyIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaHJlZjogImh0dHA6Ly9zY2FuZmNvZGUuY29tL2NvbnRyaWJ1dGUtYXQtc2NhbmZjb2RlLyIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkNvbnRyaWJ1dGUiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICJodHRwOi8vc2NhbmZjb2RlLmNvbS9wcml2YWN5LXBvbGljeS8iIH0gfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiUHJpdmFjeSBQb2xpY3kiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogImh0dHA6Ly9zY2FuZmNvZGUuY29tL3NpdGVtYXAvIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJTaXRlbWFwIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImhyIikKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTggY29sLXNtLTYgY29sLXhzLTEyIiB9LCBbCiAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNvcHlyaWdodC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJDb3B5cmlnaHQgwqkgMjAxNyBBbGwgUmlnaHRzIFJlc2VydmVkIGJ5ICIpLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJTY2FuZmNvZGUiKV0pLAogICAgICAgICAgICAgIF92bS5fdigiLiAiKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC00IGNvbC1zbS02IGNvbC14cy0xMiIgfSwgWwogICAgICAgICAgICBfYygidWwiLCB7IHN0YXRpY0NsYXNzOiAic29jaWFsLWljb25zIiB9LCBbCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAiZmFjZWJvb2siLCBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImZhIGZhLWZhY2Vib29rIiB9KQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJ0d2l0dGVyIiwgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmYSBmYS10d2l0dGVyIiB9KQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgc3RhdGljQ2xhc3M6ICJkcmliYmJsZSIsIGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmEgZmEtZHJpYmJibGUiIH0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImxpbmtlZGluIiwgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmYSBmYS1saW5rZWRpbiIgfSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}